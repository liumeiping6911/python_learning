python变量特性+命名规则
python是一种动态类型语言，在赋值的执行中可以绑定不同类型的值，这个过程叫做变量赋值操作，赋值同时确定了变量类型


命名规则
Python 需要使用标识符给变量命名，其实标识符就是用于给程序中变量、类、方法命名的符号（简单来说，标识符就是合法的名字）。

Python 语言的标识符必须以字母、下画线（_）开头，后面可以跟任意数目的字母、数字和下画线（_）。此处的字母并不局限于 26 个英文字母，可以包含中文字符、日文字符等。

由于 Python 3 支持 UTF-8 字符集，因此 Python 3 的标识符可以使用 UTF-8 所能表示的多种语言的字符。Python 语言是区分大小写的，因此 abc 和 Abc 是两个不同的标识符。

Python 2.x 对中文支持较差，如果要在 Python 2.x 程序中使用中文字符或中文变量，则需要在 Python 源程序的第一行增加“#coding:utf-8”，当然别忘了将源文件保存为 UTF-8 字符集。

在使用标识符时，需要注意如下规则： 
标识符可以由字母、数字、下画线（_）组成，其中数字不能打头。
标识符不能是 Python 关键字，但可以包含关键字。
标识符不能包含空格。

Python 的关键字和内置函数
Python 还包含一系列关键字和内置函数，一般也不建议使用它们作为变量名： 
如果开发者尝试使用关键字作为变量名，Python 解释器会报错。
如果开发者使用内置函数的名字作为变量名，Python 解释器倒不会报错，只是该内置函数就被这个变量覆盖了，该内置函数就不能使用了。

关键字查看：
#导入keyword 模块
import keyword
#显示所有关键字
print (keyword.kwlist)

内置函数查看：
import builtins
print (dir(builtins))
